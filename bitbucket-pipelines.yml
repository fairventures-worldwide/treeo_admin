image: node:9.11.1
pipelines:
  branches:
    stage:
      - step:
          script:
            - npm install
            - npm run build-stage
          name: Build Application
          caches:
            - node
          artifacts:
            - dist/** # change this to your build directory
      - step:
          name: Deploy to GCloud
          deployment: staging
          script:
            # Set a couple variables for readability
            - SDK_VERSION=223.0.0
            - SDK_FILENAME=google-cloud-sdk-${SDK_VERSION}-linux-x86_64.tar.gz
            # Install Google Cloud SDK
            - curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${SDK_FILENAME}
            - tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/
            - /tmp/google-cloud-sdk/install.sh -q
            - source /tmp/google-cloud-sdk/path.bash.inc
            - gcloud -v
            # Authenticating with the service account key file
            - echo $GCLOUD_STAGE_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            # Linking to the Google Cloud project
            - gcloud config set project $GCLOUD_STAGE_PROJECT
            # Deploying the application
            - gcloud app deploy
    test:
      - step:
          script:
            - npm install
            - npm run build-test
          name: Build Application
          caches:
            - node
          artifacts:
            - dist/** # change this to your build directory
      - step:
          name: Deploy to GCloud
          deployment: test
          script:
            # Set a couple variables for readability
            - SDK_VERSION=223.0.0
            - SDK_FILENAME=google-cloud-sdk-${SDK_VERSION}-linux-x86_64.tar.gz
            # Install Google Cloud SDK
            - curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${SDK_FILENAME}
            - tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/
            - /tmp/google-cloud-sdk/install.sh -q
            - source /tmp/google-cloud-sdk/path.bash.inc
            - gcloud -v
            # Authenticating with the service account key file
            - echo $GCLOUD_TEST_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            # Linking to the Google Cloud project
            - gcloud config set project $GCLOUD_TEST_PROJECT
            # Deploying the application
            - gcloud app deploy
    master:
      - step:
          script:
            - npm install
            - npm run build-master
          name: Build Application
          caches:
            - node
          artifacts:
            - dist/** # change this to your build directory
      - step:
          name: Deploy to GCloud
          deployment: production
          script:
            # Set a couple variables for readability
            - SDK_VERSION=223.0.0
            - SDK_FILENAME=google-cloud-sdk-${SDK_VERSION}-linux-x86_64.tar.gz
            # Install Google Cloud SDK
            - curl -o /tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${SDK_FILENAME}
            - tar -xvf /tmp/google-cloud-sdk.tar.gz -C /tmp/
            - /tmp/google-cloud-sdk/install.sh -q
            - source /tmp/google-cloud-sdk/path.bash.inc
            - gcloud -v
            # Authenticating with the service account key file
            - echo $GCLOUD_LIVE_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            # Linking to the Google Cloud project
            - gcloud config set project $GCLOUD_LIVE_PROJECT
            # Deploying the application
            - gcloud app deploy